name: Windows

on: 
  push:

jobs:

  build-windows:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    
    steps:
    - uses: actions/checkout@v4
    - name: set env vars
      run: |
        if [ ${{github.ref_name}} == 'juce8' ]; then
          echo "GUI_BRANCH=development-juce8" >> "$GITHUB_ENV"
          echo "GUI_LIB_VERSION=v1.0.0-dev" >> "$GITHUB_ENV"
        elif [ ${{github.ref_name}} == 'testing-juce8' ]; then
          echo "GUI_BRANCH=testing-juce8" >> "$GITHUB_ENV"
          echo "GUI_LIB_VERSION=v1.0.0-alpha" >> "$GITHUB_ENV"
        else
          echo "Invalid branch : ${{github.ref_name}}"
          exit 1
        fi
      shell: bash
    - name: setup
      run: |
        cd ../..
        git clone https://github.com/open-ephys/plugin-GUI.git --branch $GUI_BRANCH
        cd plugin-GUI/Build
        cmake -G "Visual Studio 17 2022" -A x64 .. 
        mkdir Release && cd Release
        curl -L https://openephys.jfrog.io/artifactory/GUI-binaries/Libraries/open-ephys-lib-$GUI_LIB_VERSION.zip --output open-ephys-lib.zip
        unzip open-ephys-lib.zip
      shell: bash
    - name: configure
      run: |
        cd Build
        cmake -G "Visual Studio 17 2022" -A x64 .. 
      shell: bash
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2
    - name: build-plugin
      run: |
        cd Build
        msbuild INSTALL.vcxproj -p:Configuration=Release -p:Platform=x64
      shell: cmd
# TODO: Perform some basic testing before publishing...
#    - name: test
#      run: cd build && ctest
    - name: deploy
      if: github.ref == 'refs/heads/testing-juce8'
      env:
        ARTIFACTORY_ACCESS_TOKEN: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
        build_dir: "Build/Release"
        package: NeuropixelsPXI-windows
      run: |
        plugin_api=$(grep -rnw ../../plugin-GUI/Source -e '#define PLUGIN_API_VER' | grep -Eo "[0-9]*" | tail -1)
        tag=$(grep -w Source/NeuropixThread.h -e '#define PLUGIN_VERSION' | grep -Eo "[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z]+)?")
        new_plugin_ver=$tag-API$plugin_api
        mkdir plugins
        cp $build_dir/*.dll plugins
        if [ -d "Resources" ]
        then
          mkdir shared
          cp Resources/*.dll shared
        fi
        zipfile=${package}_${new_plugin_ver}.zip
        powershell Compress-Archive -Path "plugins" -DestinationPath ${zipfile}
        if [ -d "shared" ]
        then
          powershell Compress-Archive -U -Path "shared" -DestinationPath ${zipfile}
        fi
        curl -H "X-JFrog-Art-Api:$ARTIFACTORY_ACCESS_TOKEN" -T $zipfile "https://openephys.jfrog.io/artifactory/NeuropixelsPXI-plugin/windows/$zipfile"
      shell: bash